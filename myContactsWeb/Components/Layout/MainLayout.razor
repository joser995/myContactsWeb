@implements IDisposable

@inject NavigationManager NavigationManager
@inherits LayoutComponentBase



<div class="page">
    <main>
        <!-- Navbar Dark -->
        <nav class="navbar navbar-expand-lg navbar-dark bg-gradient-dark z-index-3 py-3">
            <div class="container">
                <a class="navbar-brand text-white" href="" rel="tooltip" title="Designed and Coded by Creative Tim" data-placement="bottom" target="_blank">
                    My Contacts
                </a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navigation" aria-controls="navigation" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <AuthorizeView>
                    <Authorized>
                        <div class="nav-item px-3">
                            <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                        </div>
                        <div class="nav-item px-3">
                            <form action="Account/Logout" method="post">
                                <AntiforgeryToken />
                                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                <button type="submit" class="btn bg-gradient-info">
                                    <span class="btn-inner--icon"><i class="fa-solid fa-arrow-right-from-bracket"></i></span>
                                    <span class="btn-inner--text">Logout</span>                                     
                                </button>
                            </form>
                        </div>
                    </Authorized>
                </AuthorizeView>
            </div>
        </nav>
        <!-- End Navbar -->


        <article class="content " style="padding-top: 2rem !important;">
            @Body
        </article>
    </main>
</div>
@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}